/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 24);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/components/quizzes/takerquizzes/index.js":
/*!***************************************************************!*\
  !*** ./resources/js/components/quizzes/takerquizzes/index.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("new Vue({\n  el: '#component',\n  data: {\n    name: {\n      singular: 'TakerQuiz',\n      plural: 'TakerQuizzes'\n    },\n    url: {\n      path: {\n        collection: '/quizzes/takerquizzes/list',\n        resource: '/quizzes/takerquizzes'\n      },\n      qs: ''\n    },\n    loading: false,\n    submitting: false,\n    query: {\n      keywords: '',\n      page: 1,\n      limit: parseInt(Settings['site.ipp.tabular'])\n    },\n    filters: {\n      form: {\n        plan: null\n      },\n      status: 0,\n      qs: ''\n    },\n    results: {\n      rows: [],\n      original: [],\n      total: {\n        records: 0,\n        pages: 0\n      }\n    },\n    checkbox: {\n      ids: [],\n      all: false\n    },\n    quiz: {\n      id: '',\n      name: ''\n    }\n  },\n  methods: {\n    clear: function clear() {\n      this.query = {\n        keywords: '',\n        page: 1,\n        limit: parseInt(Settings['site.ipp.tabular'])\n      };\n      this.filters = {\n        form: {\n          plan: null\n        },\n        status: 0,\n        qs: ''\n      };\n      this.search();\n    },\n    search: function search() {\n      var that = this;\n      this.url.qs = 'q=' + this.query.keywords + this.filters.qs + '&p=' + this.query.page + '&l=' + this.query.limit + '';\n      that.loading = true;\n      axios.get(this.url.path.collection + '?' + this.url.qs).then(function (response) {\n        that.results.rows = response.data.records;\n        that.results.total.records = response.data.pagination.records.total;\n        that.results.total.pages = response.data.pagination.pages.total;\n        that.loading = false;\n      });\n    },\n    turn: function turn() {\n      var that = this;\n      this.url.qs = 'q=' + this.query.keywords + this.filters.qs + '&p=' + this.query.page + '&l=' + this.query.limit + '';\n      that.loading = true;\n      axios.get(this.url.path.collection + '?' + this.url.qs).then(function (response) {\n        that.results.rows = response.data.records;\n        that.results.total.records = response.data.pagination.records.total;\n        that.results.total.pages = response.data.pagination.pages.total;\n        that.loading = false;\n      });\n    },\n    openFiltersModal: function openFiltersModal() {\n      jQuery('#entity-filter').modal('show');\n    },\n    openCreateModal: function openCreateModal() {\n      jQuery('#entity-create').modal('show');\n    },\n    selectAll: function selectAll() {\n      this.checkbox.ids = [];\n\n      if (this.checkbox.all) {\n        for (var i in this.results.rows) {\n          this.checkbox.ids.push(this.results.rows[i].id);\n        }\n      }\n    },\n    select: function select() {\n      this.checkbox.all = false;\n    },\n    cancel: function cancel(index) {\n      var entity = _.clone(this.results.original[index]);\n\n      entity.edit = 0;\n      this.$set(this.results.rows, index, entity);\n    },\n    confirmRemove: function confirmRemove(quiz) {\n      this.quiz = quiz;\n      jQuery('#entity-remove').modal('show');\n    },\n    confirmRemoveSelected: function confirmRemoveSelected() {\n      jQuery('#entity-remove-selected').modal('show');\n    },\n    create: function create() {\n      var that = this;\n      axios({\n        method: 'POST',\n        url: this.url.path.resource,\n        data: that.quiz\n      }).then(function (result) {\n        window.location = that.url.path.resource + '/' + result.data.id + '/edit';\n      });\n    },\n    copy: function copy(id) {\n      var that = this;\n      axios({\n        method: 'PUT',\n        url: this.url.path.resource + '/' + id,\n        data: {\n          action: 'copy'\n        }\n      }).then(function () {\n        jQuery('#entity-remove').modal('hide');\n        that.search();\n        that.$bvToast.toast(that.name.singular + ' has been copied.', {\n          title: 'Message',\n          variant: 'success',\n          solid: true\n        });\n      });\n    },\n    remove: function remove() {\n      var that = this;\n      axios({\n        method: 'DELETE',\n        url: this.url.path.resource + '/' + this.quiz.id\n      }).then(function () {\n        jQuery('#entity-remove').modal('hide');\n        that.search();\n        that.quiz = {\n          id: 0,\n          name: ''\n        };\n        that.$bvToast.toast(that.name.singular + ' has been deleted.', {\n          title: 'Message',\n          variant: 'success',\n          solid: true\n        });\n      });\n    },\n    removeSelected: function removeSelected() {\n      var that = this;\n      axios({\n        method: 'DELETE',\n        url: this.url.path,\n        data: {\n          ids: this.checkbox.ids\n        }\n      }).then(function () {\n        jQuery('#entity-remove-selected').modal('hide');\n        that.checkbox.ids = [];\n        that.search();\n        that.$bvToast.toast(that.name.plural + ' has been deleted.', {\n          title: 'Message',\n          variant: 'success',\n          solid: true\n        });\n      });\n    }\n  },\n  watch: {\n    'checkbox.all': function checkboxAll() {\n      this.selectAll();\n    }\n  },\n  beforeMount: function beforeMount() {\n    this.clear();\n  },\n  mounted: function mounted() {\n    if (Message != null) {\n      this.$bvToast.toast(Message.content, {\n        title: 'Message',\n        variant: Message.status,\n        solid: true\n      });\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/components/quizzes/takerquizzes/index.js\n");

/***/ }),

/***/ 24:
/*!*********************************************************************!*\
  !*** multi ./resources/js/components/quizzes/takerquizzes/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! F:\Project\laravel\quizemaster\code\resources\js\components\quizzes\takerquizzes\index.js */"./resources/js/components/quizzes/takerquizzes/index.js");


/***/ })

/******/ });